apply plugin: 'groovy'
apply from: "$rootDir/gradle/instrumentation.gradle"

//apply plugin: "otel.javaagent-instrumentation"

//muzzle {
//  pass {
//    coreJdk()
//  }
//}

dependencies {
  compileOnly project(":core-bootstrap")
  implementation "com.appoptics.agent.java:core:${versions.appopticsCore}"
  implementation "io.opentelemetry:opentelemetry-semconv:${versions.opentelemetryAlpha}"
  implementation "io.opentelemetry:opentelemetry-sdk-trace:${versions.opentelemetry}"

  compileOnly "javax.servlet:javax.servlet-api:3.0.1"

  compileOnly "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:${versions.opentelemetryJavaagentAlpha}"

  testImplementation project(path: ":instrumentation:jdbc")
  testInstrumentation "io.opentelemetry.javaagent.instrumentation:opentelemetry-javaagent-servlet-common:${versions.opentelemetryJavaagentAlpha}"
  testInstrumentation "io.opentelemetry.javaagent.instrumentation:opentelemetry-javaagent-servlet-2.2:${versions.opentelemetryJavaagentAlpha}"
  testInstrumentation "io.opentelemetry.javaagent.instrumentation:opentelemetry-javaagent-servlet-3.0:${versions.opentelemetryJavaagentAlpha}"

  testImplementation("io.opentelemetry.javaagent:opentelemetry-testing-common:${versions.opentelemetryJavaagentAlpha}") {
    exclude group: 'org.eclipse.jetty', module: 'jetty-server'
  }

  testImplementation "com.squareup.okhttp3:okhttp:3.12.12"
  testImplementation "javax.servlet:javax.servlet-api:3.0.1"
  testImplementation "org.eclipse.jetty:jetty-server:8.0.0.v20110901"
  testImplementation "org.eclipse.jetty:jetty-servlet:8.0.0.v20110901"

  compileOnly "com.appoptics.agent.java:core:${versions.appopticsCore}"

  // mandatory dependencies for using Spock
  implementation "org.codehaus.groovy:groovy:3.0.9"
  testImplementation platform("org.spockframework:spock-bom:2.1-groovy-3.0")
  testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}
